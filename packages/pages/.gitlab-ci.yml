build-pages-production:
  stage: build
  before_script:
    - apk add --update bash
    - pip install awscli
  script:
    - 'echo $REACT_APP_HOST_URL'
    - 'yarn --pure-lockfile'
    - 'sh ./scripts/global-artifact.sh'
    - 'yarn ci:build:pages:production'
    - 'mv  packages/pages/public  packages/pages/build'
  only:
    refs:
      - master
    changes:
      - 'packages/pages/**/*'
  except:
    variables:
      - $BUTTERCMS
  artifacts:
    when: always
    paths:
      - packages/pages/build

build-pages-production-buttercms:
  stage: build
  before_script:
    - apk add --update bash
    - pip install awscli
  script:
    - 'echo $REACT_APP_HOST_URL'
    - 'yarn --pure-lockfile'
    - 'sh ./scripts/global-artifact.sh'
    - 'yarn ci:build:pages:production'
    - 'mv  packages/pages/public  packages/pages/build'
  only:
    refs:
      - master
    variables:
      - $BUTTERCMS
  artifacts:
    when: always
    paths:
      - packages/pages/build

deploy-prod-pages:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: deploy-prod
  script:
    - |
      #!/bin/sh
      mv packages/pages/build latest
      aws s3 rm s3://${BUCKET_NAME_PROD_WWW}/ --recursive
      aws s3 cp latest s3://${BUCKET_NAME_PROD_WWW}/ --recursive
      ./scripts/cache_invalidation.sh raise.it
      ./scripts/cache_invalidation.sh raise.it
  only:
    refs:
      - master
    changes:
      - 'packages/pages/**/*'
  except:
    variables:
      - $BUTTERCMS
  resource_group: production

deploy-prod-pages-buttercms:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: deploy-prod
  script:
    - |
      #!/bin/sh
      mv packages/pages/build latest
      aws s3 rm s3://${BUCKET_NAME_PROD_WWW}/ --recursive
      aws s3 cp latest s3://${BUCKET_NAME_PROD_WWW}/ --recursive
      ./scripts/cache_invalidation.sh raise.it
      ./scripts/cache_invalidation.sh raise.it
  only:
    refs:
      - master
    variables:
      - $BUTTERCMS
  resource_group: production
